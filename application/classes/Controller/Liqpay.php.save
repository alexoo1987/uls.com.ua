<?php defined('SYSPATH') or die('No direct script access.');

class Controller_Liqpay extends Controller_Application
{
    public function action_checkout()
    {
        $amount = (int) $this->request->post('amount');

        if (HTTP_Request::POST !== $this->request->method() || empty($amount)) {
            return Controller::redirect('liqpay/prepare');
        }

        $this->template->content = View::factory('liqpay/checkout')
            ->bind('signature', $signature)
            ->bind('data', $data);

        $this->template->title = 'Пополнить кошелёк';
        $this->template->description = '';
        $this->template->keywords = '';
        $this->template->author = '';

        $params = [
            'action'      => 'pay',
            'currency'    => 'UAH',
            'description' => 'Пополнение личного кошелька',
            'order_id'    => 'order_id_1',
            'version'     => '3',
            'amount'      => $amount,
        ];

        $liqpay = new Libs_Liqpay();
        $liqData = $liqpay->getData($params);
        $data = $liqData['data'];
        $signature = $liqData['signature'];
    }

    public function action_prepare()
    {
        $this->template->content = View::factory('liqpay/prepare');

        $this->template->title = 'Пополнить кошелёк';
        $this->template->description = '';
        $this->template->keywords = '';
        $this->template->author = '';
    }

    public function action_order_pay()
    {
        $this->template->content = View::factory('liqpay/checkout')
            ->bind('signature', $signature)
            ->bind('data', $data);

        $this->template->title = 'Пополнить кошелёк';
        $this->template->description = '';
        $this->template->keywords = '';
        $this->template->author = '';

        $orderId = $this->request->param('orderId');
        if (empty($orderId)) {
            return Controller::redirect('orders/add');
        }

        $orderItems = ORM::factory('Orderitem')
            ->where('order_id', '=', $orderId)
            ->find_all()
            ->as_array();

        $amount = 0;
        foreach ($orderItems as $item) {
            $amount += $item->purchase_per_unit;
        }

        $params = [
            'action'      => 'pay',
            'currency'    => 'UAH',
            'description' => 'Оплата заказа #' . $orderId,
            'order_id'    => 'test_1_order_id_' . $orderId,
            'version'     => '3',
            'amount'      => $amount,
            'server_url'  => Helper_Url::createUrl('liqpay/response_by_order'),
        ];

        $liqpay = new Libs_Liqpay();
        $liqData = $liqpay->getData($params);
        $data = $liqData['data'];
        $signature = $liqData['signature'];
    }

    public function action_response_by_order()
    {
        if (HTTP_Request::POST !== $this->request->method()) exit();

        $liqpay = new Libs_Liqpay();
        $response = $liqpay->getPaymentData($this->request->post('data'), $this->request->post('signature'));
        if (in_array($response->status, ['success', 'wait_accept'])) {
            preg_match('/(?<orderId>\d+)$/', $response->order_id, $respData);
            $orderId = $respData['orderId'];
<<<<<<< HEAD
$orderId = 27211;
=======
>>>>>>> 836f4b46c57d4d90b8357a118db5bb91f08639e9
            $order = ORM::factory('Order', $orderId);
            $paymentData = [
                'order_id'  => $orderId,
                'user_id'   => $order->manager_id,
                'client_id' => $order->client_id,
                'value'     => $response->amount,
                'date_time' => date('Y-m-d H:i:s')
            ];

            $clientPayment = ORM::factory('ClientPayment');
            $clientPayment->values($paymentData);
<<<<<<< HEAD
//            $clientPayment->save();
            foreach ($order->orderitems->find_all()->as_array() as $item) {
                $item->state_id = 2;
//                $item->save();
=======
            $clientPayment->save();

            foreach ($order->orderitems->find_all()->as_array() as $item) {
                $item->state_id = 2;
                $item->save();
            }
        }
        exit();
    }
}

