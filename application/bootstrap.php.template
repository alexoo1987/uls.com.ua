<?php defined('SYSPATH') or die('No direct script access.');

// -- Environment setup --------------------------------------------------------

// Load the core Kohana class
require SYSPATH.'classes/Kohana/Core'.EXT;

if (is_file(APPPATH.'classes/Kohana'.EXT))
{
	// Application extends the core
	require APPPATH.'classes/Kohana'.EXT;
}
else
{
	// Load empty core extension
	require SYSPATH.'classes/Kohana'.EXT;
}

/**
 * Set the default time zone.
 *
 * @link http://kohanaframework.org/guide/using.configuration
 * @link http://www.php.net/manual/timezones
 */
date_default_timezone_set('Europe/Kiev');

/**
 * Set the default locale.
 *
 * @link http://kohanaframework.org/guide/using.configuration
 * @link http://www.php.net/manual/function.setlocale
 */
setlocale(LC_ALL, 'en_US.utf-8');

/**
 * Enable the Kohana auto-loader.
 *
 * @link http://kohanaframework.org/guide/using.autoloading
 * @link http://www.php.net/manual/function.spl-autoload-register
 */
spl_autoload_register(array('Kohana', 'auto_load'));

/**
 * Optionally, you can enable a compatibility auto-loader for use with
 * older modules that have not been updated for PSR-0.
 *
 * It is recommended to not enable this unless absolutely necessary.
 */
//spl_autoload_register(array('Kohana', 'auto_load_lowercase'));

/**
 * Enable the Kohana auto-loader for unserialization.
 *
 * @link http://www.php.net/manual/function.spl-autoload-call
 * @link http://www.php.net/manual/var.configuration#unserialize-callback-func
 */
ini_set('unserialize_callback_func', 'spl_autoload_call');

// -- Configuration and initialization -----------------------------------------

/**
 * Set the default language
 */
I18n::lang('ru-ru');

/**
 * Set Kohana::$environment if a 'KOHANA_ENV' environment variable has been supplied.
 *
 * Note: If you supply an invalid environment name, a PHP warning will be thrown
 * saying "Couldn't find constant Kohana::<INVALID_ENV_NAME>"
 */
Kohana::$environment = Kohana::DEVELOPMENT;
if (isset($_SERVER['KOHANA_ENV']))
{
	Kohana::$environment = constant('Kohana::'.strtoupper($_SERVER['KOHANA_ENV']));
}

/**
 * Initialize Kohana, setting the default options.
 *
 * The following options are available:
 *
 * - string   base_url    path, and optionally domain, of your application   NULL
 * - string   index_file  name of your index file, usually "index.php"       index.php
 * - string   charset     internal character set used for input and output   utf-8
 * - string   cache_dir   set the internal cache directory                   APPPATH/cache
 * - integer  cache_life  lifetime, in seconds, of items cached              60
 * - boolean  errors      enable or disable error handling                   TRUE
 * - boolean  profile     enable or disable internal profiling               TRUE
 * - boolean  caching     enable or disable internal caching                 FALSE
 * - boolean  expose      set the X-Powered-By header                        FALSE
 */
Kohana::init(array(
	'base_url'   => 'http://autoparts/', // SET BASE URL HERE
	'index_file' => FALSE,
));

/**
 * Attach the file write to logging. Multiple writers are supported.
 */
Kohana::$log->attach(new Log_File(APPPATH.'logs'));

/**
 * Attach a file reader to config. Multiple readers are supported.
 */
Kohana::$config->attach(new Config_File);

Cookie::$salt = '201307241203';
/**
 * Enable modules. Modules are referenced by a relative or absolute path.
 */
Kohana::modules(array(
	   'auth'       => MODPATH.'auth',       // Basic authentication
	// 'cache'      => MODPATH.'cache',      // Caching with multiple backends
	// 'codebench'  => MODPATH.'codebench',  // Benchmarking tool
	   'database'   => MODPATH.'database',   // Database access
	   'image'      => MODPATH.'image',      // Image manipulation
	   'minion'     => MODPATH.'minion',     // CLI Tasks
	   'orm'        => MODPATH.'orm',        // Object Relationship Mapping
	// 'unittest'   => MODPATH.'unittest',   // Unit testing
	   'userguide'  => MODPATH.'userguide',  // User guide and API documentation
	   'phpexcel'   => MODPATH.'phpexcel',
	   'pagination' => MODPATH.'pagination', // Pagination
	   'imagefly'   => MODPATH.'imagefly',   // Imagefly
	   'email'      => MODPATH.'email',      // E-mail
	));

/**
 * Set the routes. Each route must have a minimum of a name, a URI and a set of
 * defaults for the URI.
 */
Route::set('admin/menu/add_item', 'admin/menu/add_item(/<menu_id>(/<parent_id>))')
	->defaults(array(
		'directory'  => 'admin',
		'controller' => 'menu',
		'action'     => 'add_item',
	));
Route::set('admin', 'admin(/<controller>(/<action>(/<id>)))')
	->defaults(array(
		'directory'  => 'admin',
		'controller' => 'user',
		'action'     => 'index',
	));
Route::set('normal', '<controller>(/<action>(/<id>))', array('controller' => 'ajax|authorization|find|cart|orders|managerrequest|comments|cars|carsales')) 
	->defaults(array( 
		'action' => 'index',
	));


Route::set('cat_manufacturer_old', 'catalog/car/<manufacturer>', array('manufacturer' => '[^//]+'))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'car',
	));

Route::set('cat_index', 'catalog(/<action>(/<id>))', array(
		'action' => 'image|car_choose|set_car_mod|select_another|get_images|article'
	))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'index',
	));

Route::set('cat_manufacturer', 'catalog/<manufacturer>', array(
	'manufacturer' => '[^//]+',
	))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'car',
	));

Route::set('cat_model', 'catalog/<manufacturer>/<model>', array(
		'manufacturer' => '[^//]+',
		'model' => '[^//]+',
	))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'model',
	));

Route::set('cat_manufacturer_category', '<manufacturer>/<category>', array(
	'manufacturer' => '[^//]+',
	'category' => '[^//]+',
	))
	->defaults(array(
		'controller' => 'catalog',
		'action' => 'manufacturer_category',
	));

Route::set('cat_modification', 'catalog/<manufacturer>/<model>/<modification>', array(
		'manufacturer' => '[^//]+',
		'model' => '[^//]+',
		'modification' => '[^//]+',
	))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'types',
	));

Route::set('cat_category', 'catalog/<manufacturer>/<model>/<modification>/<category>', array(
		'manufacturer' => '[^//]+',
		'model' => '[^//]+',
		'modification' => '[^//]+',
		'category' => '[^//]+',
	))
	->defaults(array( 
		'controller' => 'catalog',
		'action' => 'parts',
	));

Route::set('catch_all', '<page>', array('page' => '.+'))
	->defaults(array(
		'controller' => 'pages',
		'action' => 'index',
		'page' => 'home',
	));
Route::set('default', '(<controller>(/<action>(/<id>)))')
	->defaults(array(
		'controller' => 'pages',
		'action'     => 'index',
	));
